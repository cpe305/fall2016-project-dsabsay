{
  "name": "RhythmTrainer",
  "tagline": "An application to help you practice sight-reading rhythms",
  "body": "# RhythmTrainer\r\n\r\n[![Build Status](https://travis-ci.org/cpe305/fall2016-project-dsabsay.svg?branch=master)](https://travis-ci.org/cpe305/fall2016-project-dsabsay)\r\n\r\nRhythmTrainer is an application that will help you practice sight-reading rhythms.\r\n\r\nMore documentation here: https://cpe305.github.io/fall2016-project-dsabsay/\r\n\r\n## Description\r\nRhythmTrainer presents rhythms in standard music notation. You can then record yourself performing the rhythms using the microphone in your computer. You can perform the rhythm by clapping, snapping, tapping a pencil on a desk, or doing anything else that produces distinct attacks. RhythmTrainer will then grade your performance and give you a score.\r\n\r\n## Dependencies\r\n* JavaFX\r\n* Music notation is rendered with VexFlow (https://github.com/0xfe/vexflow) and VexTab (https://github.com/0xfe/vextab).\r\n* The open-source (AGPL-3.0) Essentia library is used for the audio analysis. More information about Essentia can be found here: http://essentia.upf.edu\r\n\r\n## Design Patterns\r\n* **Singleton Pattern:** MainController\r\n  * Only one instance of MainController for the entire application. Using the Singleton Pattern eliminates the need to pass around a reference to the MainController instance.\r\n* **Command Pattern:** Recorder\r\n  * Recorder has an enclosed class RecordAudio that implements Runnable. This is used to capture audio in a separate thread.",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}